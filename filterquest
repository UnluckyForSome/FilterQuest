#!/bin/php
##
## Run this from the folder that contains the games for a single specific system.
## The script is looking for regular game file naming conventions, for example "Crash Team Racing (USA)".
## Windows users, please install Cygdrive with PHP enabled to use this script.
## Use "php filterquest" to run.

<?php

$gameList = trim(shell_exec("ls -1"));
$gameArray = explode("\n", $gameList);

shell_exec('mkdir -p Removed');
shell_exec('mkdir -p Process');

foreach($gameArray as $thisGame) {
	if(!$thisGame) continue;
	// Probably already been removed
	if(!file_exists($thisGame)) continue;

	$niceName = trim(preg_replace('%[\(|\[].*%', '', $thisGame));

	// Non-Engish speaking countries e.g. (France) or (Japan)
        if(preg_match('%\((China|France|Germany|Hungary|Italy|Japan|Brazil|Korea|Spain|Netherlands|Finland|Russia|Portugal|Sweden|Norway|Scandinavia|Greece)\)%', $thisGame)) {
		echo "Foreign release found. Removing {$thisGame}\n";
		shell_exec("mv \"{$thisGame}\" Removed/");
		continue;
	}

	// Non-full release e.g. (Demo) or (Kiosk)
        if(preg_match('%\((Demo|Kiosk|Debug|Unl|Sample|Beta|Beta \d+|Developer Cart)\)%', $thisGame)) {
		echo "Non-full release found. Removing {$thisGame}\n";
		shell_exec("mv \"{$thisGame}\" Removed/");
		continue;
	}

	// A USA version exists instead, use that
	if(!strstr($thisGame, '(USA)') && !strstr($thisGame, '(Japan, USA)') && !strstr($thisGame, '(USA, Korea)')) {
		// Check for pure USA only version
		$fCheck = trim(shell_exec("ls -1 \"{$niceName} (USA)\"* 2>/dev/null"));
		if($fCheck) {
			echo "Better version available than {$thisGame}\n... Removing!";
			shell_exec("mv \"{$thisGame}\" Removed/");
			continue;
		}

		// Check for USA/Japan version
		$fCheck = trim(shell_exec("ls -1 \"{$niceName} (Japan, USA)\"* 2>/dev/null"));
		if(!$fCheck) $fCheck = trim(shell_exec("ls -1 \"{$niceName} (USA, Korea)\"* 2>/dev/null"));
		if($fCheck) {
			echo "Better version available. Removing {$thisGame}\n";
			shell_exec("mv \"{$thisGame}\" Removed/");
			continue;
		}
	}

	// Remove non-English versions e.g. (Se,De,Fr)
	if(preg_match('%\(Europe\).+\(((?:[A-Za-z]{2}[,|\)])+)%', $thisGame, $languageArray)) {
		// Preg match leaves trailing ) so remove it
		$languageArray = explode(',', str_replace(')', '', trim($languageArray[1])));
		if(!in_array('En', $languageArray)) {
			echo "Non-English European version found. Removing - {$thisGame}\n";
			shell_exec("mv \"{$thisGame}\" Removed/");
			continue;
		}
	}


	// Check for reversions e.g. (Rev 2) or (Rev A)
	if(preg_match('%\(Rev (\d|[A-Za-z])\)%', $thisGame, $revNum)) {
		if(is_numeric($revNum[1])) {
			$revNum = intval($revNum[1]);
		}else{
			$revNum = ord($revNum[1]);
		}
	}

	$otherVersions = trim(shell_exec("ls -1 \"{$niceName} (\"*\"(Rev \"* 2>/dev/null"));
	if($otherVersions) {
		$otherVersionArray = explode("\n", $otherVersions);
		foreach($otherVersionArray as $otherGame) {
			preg_match('%\(Rev (\d|[A-Za-z])\)%', $otherGame, $thisRev);
			if(is_numeric($thisRev[1])) {
				$thisRev = intval($thisRev[1]);
			}else{
				$thisRev = ord($thisRev[1]);
			}

			if(isset($revNum) && $revNum < $thisRev) {
				// Other version is newer, bin ours
				echo "Inferior version found [{$revNum} VS. {$thisRev}] - Removing {$thisGame}\n";
				shell_exec("mv \"{$thisGame}\" Removed/");
				continue 2;
			}
		}
	}

	// Check for reversions e.g. (v1.01)
	if(preg_match('%\(v(\d\.\d)\)%', $thisGame, $revNum)) $revNum = $revNum[1];

	$otherVersions = trim(shell_exec("ls -1 \"{$niceName} (\"*\"(v\"* 2>/dev/null"));
	if($otherVersions) {
		$otherVersionArray = explode("\n", $otherVersions);
		foreach($otherVersionArray as $otherGame) {
			preg_match('%\(v(\d\.\d)\)%', $otherGame, $thisRev);
			$thisRev = $thisRev[1];

			if(isset($revNum) && $revNum < $thisRev) {
				// Other version is newer, bin ours
				echo "Inferior version found [{$revNum} VS. {$thisRev}] - Removing {$thisGame}\n";
				shell_exec("mv \"{$thisGame}\" Removed/");
				continue 2;
			}
		}
	}

	// Move "(Track X)" games to a folder to process
	/*
	if(preg_match('%\(Track \d+\)%', $thisGame)) {
		$tracklessName = preg_replace('%\s*\(Track \d+\)%', '', $thisGame);
		$tracklessName = preg_replace('%\.bin$%', '', $tracklessName);
		shell_exec("mv \"{$thisGame}\" Process/");
		shell_exec("mv \"{$tracklessName}.cue\" Process/");
	}
	*/
}

?>
