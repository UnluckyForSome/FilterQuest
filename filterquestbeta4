#!/bin/php
##
## FilterQuest by UnluckyForSome
## Please see https://github.com/unluckyforsome/filterquest for info.

<?php
$gameList = trim(shell_exec("ls -a -1 -I . -I .. -I Process -I Removed -I filterquest -I 'filterquestbeta[0-9]' -I manualdemos.txt -I manualregiondupes.txt -I manualothers.txt"));
$gameArray = explode("\n", $gameList);

shell_exec('mkdir -p Removed');
/* shell_exec('mkdir -p Process');
*/

// Initialize ManualRegionDupes.txt
if (file_exists('manualregiondupes.txt'))
{
    $manualRegionDupes = file('manualregiondupes.txt', FILE_IGNORE_NEW_LINES);
    $manualRegionPattern = "/^(?:" . implode("|", array_map(function ($i)
    {
        return preg_quote(trim($i) , "/");
    }
    , $manualRegionDupes)) . ')$/';
    echo "\033[00;32mManualRegionDupes.txt has been found, ";
    if (trim(file_get_contents('manualregiondupes.txt')) == false)
    {
        echo "\033[00;31mbut is empty! Continuing without manual region dupes filter.\n";
    }
    else
    {
        echo "\033[00;32mand is NOT empty! Applying the manual region dupes filter.\n";
    }
}
else
{
    echo "\033[00;31mManualRegionDupes.txt has NOT been found. Continuing without the manual region dupes filter.\n";
}

// Initialize ManualDemos.txt
if (file_exists('manualdemos.txt'))
{
    $manualDemos = file('manualdemos.txt', FILE_IGNORE_NEW_LINES);
    $manualDemosPattern = "/^(?:" . implode("|", array_map(function ($i)
    {
        return preg_quote(trim($i) , "/");
    }
    , $manualDemos)) . ')$/';
    echo "\033[00;32mManualDemos.txt has been found, ";
    if (trim(file_get_contents('manualdemos.txt')) == false)
    {
        echo "\033[00;31mbut is empty! Continuing without manual demos filter.\n";
    }
    else
    {
        echo "\033[00;32mand is NOT empty! Applying the manual demos filter.\n";
    }
}
else
{
    echo "\033[00;31mManualDemos.txt has NOT been found. Continuing without the manual demos filter.\n";
}

// Initialize ManualOthers.txt
if (file_exists('manualothers.txt'))
{
    $manualOthers = file('manualothers.txt', FILE_IGNORE_NEW_LINES);
    $manualOthersPattern = "/^(?:" . implode("|", array_map(function ($i)
    {
        return preg_quote(trim($i) , "/");
    }
    , $manualOthers)) . ')$/';
    echo "\033[00;32mManualOthers.txt has been found, ";
    if (trim(file_get_contents('manualothers.txt')) == false)
    {
        echo "\033[00;31mbut is empty! Continuing without manual others filter.\n";
    }
    else
    {
        echo "\033[00;32mand is NOT empty! Applying the manual others filter.\n";
    }
}
else
{
    echo "\033[00;31mManualDemos.txt has NOT been found. Continuing without the manual others filter.\n";
}

echo "\033[01;32m\n\n<<<<<<<<<<Starting Scan>>>>>>>>>>\n\n";

// Do the magic for every file
foreach ($gameArray as $thisGame)
{
    // Ensure continue if already removed
    if (!$thisGame) continue;
    if (!file_exists($thisGame)) continue;

    // Manipulate names to look and play nice
    $niceName = trim(preg_replace('%[\(|\[].*%', '', $thisGame));
    $thisGameNoExtension = preg_replace('/\.' . preg_quote(pathinfo($thisGame, PATHINFO_EXTENSION) , '/') . '$/', '', $thisGame);

    // Let the user know what game is being evaluated
    echo "\033[00;35m{$thisGameNoExtension} ... ";

    // REMOVE Non-English speaking countries e.g. (France) or (Japan)
    if (preg_match('%\((Asia|Austria|Austria, Switzerland|Belgium|Belgium, Netherlands|Brazil|China|Croatia|Denmark|Finland|France|Germany|Greece|Hungary|India|Israel|Italy|Japan|Japan, Asia|Italy|Korea|Latin America|Netherlands|Norway|Poland|Portugal|Russia|Scandinavia|South Africa|Spain|Sweden|Switzerland)\)%', $thisGame))
    {
        echo "\033[00;36mforeign release detected. Moved to Removed folder.\n";
        shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
        continue;
    }

    // REMOVE - Non-full retail release e.g. (Demo) or (Kiosk)
    if (preg_match('%\((Beta|Beta \d+|Debug|Demo|Demo \d+|Developer Cart|EDC|Kiosk|Preview|Review Build|Sample|Unl|Video Demo)\)%', $thisGame))
    {
        echo "\033[00;36mnon-retail release detected. Moved to Removed folder.\n";
        shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
        continue;
    }

    // REMOVE - non-English language versions e.g. (Se,De,Fr)
    if (preg_match('%\(Europe\).+\(((?:[A-Za-z]{2}[,|\)])+)%', $thisGame, $languageArray))
    {
        // Preg match leaves trailing ) so remove it
        $languageArray = explode(',', str_replace(')', '', trim($languageArray[1])));
        if (!in_array('En', $languageArray))
        {
            echo "\033[00;36mnon-english language release detected. Moved to Removed folder.\n";
            shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
            continue;
        }
    }

    // PRIORITZE - USA > Everything Else - and exclude seeing cruft that hasn't been removed yet! < This is so a Euro game doesn't get deleted if the script sees a (USA) (Demo) game before it gets wiped
    if (!strstr($thisGame, '(USA)') && !strstr($thisGame, '(Japan, USA)') && !strstr($thisGame, '(USA, Korea)') && !strstr($thisGame, '(USA, Brazil)'))
    {
        // Check for pure USA only version
        $fCheck = trim(shell_exec("ls -1 \"{$niceName} (USA)\"* 2>/dev/null | grep -v '(\(Beta\|Beta \d+\|Debug\|Demo\|Demo \d+\|Developer Cart\|EDC\|Kiosk\|Preview\|Review Build\|Sample\|Unl\|Video Demo\))'"));
        if ($fCheck)
        {
            echo "\033[00;36mUSA version available instead. Moved to Removed folder.\n";
            shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
            continue;
        }

        // Check for combined USA version
        $fCheck = trim(shell_exec("ls -1 \"{$niceName} (Japan, USA)\"* 2>/dev/null | grep -v '(\(Beta\|Beta \d+\|Debug\|Demo\|Demo \d+\|Developer Cart\|EDC\|Kiosk\|Preview\|Review Build\|Sample\|Unl\|Video Demo\))'"));
        if (!$fCheck) $fCheck = trim(shell_exec("ls -1 \"{$niceName} (USA, Korea)\"* 2>/dev/null | grep -v '(\(Beta\|Beta \d+\|Debug\|Demo\|Demo \d+\|Developer Cart\|EDC\|Kiosk\|Preview\|Review Build\|Sample\|Unl\|Video Demo\))'"));
        if (!$fCheck) $fCheck = trim(shell_exec("ls -1 \"{$niceName} (USA, Brazil)\"* 2>/dev/null | grep -v '(\(Beta\|Beta \d+\|Debug\|Demo\|Demo \d+\|Developer Cart\|EDC\|Kiosk\|Preview\|Review Build\|Sample\|Unl\|Video Demo\))'"));
        if ($fCheck)
        {
            echo "\033[00;36mSemi-USA version available instead. Moved to Removed folder.\n";
            shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
            continue;
        }
    }

    // PRIORITIZE - UK > Everything Else (except USA)
    if (!strstr($thisGame, '(UK)'))
    {
        // Check for pure UK only version
        $fCheck = trim(shell_exec("ls -1 \"{$niceName} (UK)\"* 2>/dev/null | grep -v '(\(Beta\|Beta \d+\|Debug\|Demo\|Demo \d+\|Developer Cart\|EDC\|Kiosk\|Preview\|Review Build\|Sample\|Unl\|Video Demo\))'"));
        if ($fCheck)
        {
            echo "\033[00;36mUK version available instead. Moved to Removed folder.\n";
            shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
            continue;
        }
    }

    // PRIORITIZE - Europe > Everything Else (except USA & UK)
    if (!strstr($thisGame, '(Europe)'))
    {
        // Check for pure Europe only version
        $fCheck = trim(shell_exec("ls -1 \"{$niceName} (Europe)\"* 2>/dev/null | grep -v '(\(Beta\|Beta \d+\|Debug\|Demo\|Demo \d+\|Developer Cart\|EDC\|Kiosk\|Preview\|Review Build\|Sample\|Unl\|Video Demo\))'"));
        if ($fCheck)
        {
            echo "\033[00;36mEurope version available instead. Moved to Removed folder.\n";
            shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
            continue;
        }
    }

    // Give version number priority over removing extra languages
    if (preg_match('(\(v(\d+\.\d+)\)|\(Rev (\d|[A-Za-z])\))', $thisGame))
    {
        // PRIORITIZE - Reversions e.g. (Rev 2 > Rev 1) or (Rev B > Rev A)
        if (preg_match('%\(Rev (\d|[A-Za-z])\)%', $thisGame, $revNum))
        {
            if (is_numeric($revNum[1]))
            {
                $revNum = intval($revNum[1]);
            }
            else
            {
                $revNum = ord($revNum[1]);
            }
        }

        $otherVersions = trim(shell_exec("ls -1 \"{$niceName} (\"*\"(Rev \"* 2>/dev/null | grep -v '(\(Beta\|Beta \d+\|Debug\|Demo\|Demo \d+\|Developer Cart\|EDC\|Kiosk\|Preview\|Review Build\|Sample\|Unl\|Video Demo\))'"));
        if ($otherVersions)
        {
            $otherVersionArray = explode("\n", $otherVersions);
            foreach ($otherVersionArray as $otherGame)
            {
                preg_match('%\(Rev (\d|[A-Za-z])\)%', $otherGame, $thisRev);
                if (is_numeric($thisRev[1]))
                {
                    $thisRev = intval($thisRev[1]);
                }
                else
                {
                    $thisRev = ord($thisRev[1]);
                }

                if (isset($revNum) && $revNum < $thisRev)
                {
                    // Other version is newer, bin ours
                    echo "\033[00;36mhigher reversion detected [{$thisRev} VS. {$revNum}] - Moved to Removed folder.\n";
                    shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
                    continue 2;
                }
            }
        }

        // PRIORITIZE - Reversions e.g. (v1.02 > v1.01) or (v1.2 > v1.1)
        if (preg_match('%\(v(\d+\.\d+)\)%', $thisGame, $revNum)) $revNum = $revNum[1];

        $otherVersions = trim(shell_exec("ls -1 \"{$niceName} (\"*\"(v\"* 2>/dev/null | grep -v '(\(Beta\|Beta \d+\|Debug\|Demo\|Demo \d+\|Developer Cart\|EDC\|Kiosk\|Preview\|Review Build\|Sample\|Unl\|Video Demo\))'"));
        if ($otherVersions)
        {
            $otherVersionArray = explode("\n", $otherVersions);
            foreach ($otherVersionArray as $otherGame)
            {
                preg_match('%\(v(\d+\.\d+)\)%', $otherGame, $thisRev);
                $thisRev = $thisRev[1];

                if (isset($revNum) && $revNum < $thisRev)
                {
                    // Other version is newer, bin ours
                    echo "\033[00;36mhigher reversion detected [{$thisRev} VS. {$revNum}] - Moved to Removed folder.\n";
                    shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
                    continue 2;
                }
            }
        }
    }

    // If no reversion text found...
    else
    {

        // PURIFY - (USA) > (USA) (En, Fr) - AKA If scanned USA game has extra languages, check to see if there is a USA version without extra languages (pure), while making sure we're not accidently scanning a USA non-full retail release that hasn't been removed yet in this check.
        if (strstr($thisGame, '(USA)') && strstr($thisGame, '(En,'))
        {
            // Check for (USA) only version without extra languages
            $fCheck = trim(shell_exec("ls -1 \"{$niceName} (USA)\"* 2>/dev/null | grep -v '([A-Z][a-z],\|(\(Beta\|Beta \d+\|Debug\|Demo\|Demo \d+\|Developer Cart\|EDC\|Kiosk\|Preview\|Review Build\|Sample\|Unl\|Video Demo\))'"));
            if ($fCheck)
            {
                echo "\033[00;36mpure USA version (without extra languages) detected. Moved to Removed folder.\n";
                shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
                continue;
            }
        }

        // PURIFY - (UK) > (UK) (En, Fr) - AKA If scanned UK game has extra languages, check to see if there is a UK version without extra languages (pure), while making sure we're not accidently scanning a UK non-full retail release that hasn't been removed yet in this check.
        if (strstr($thisGame, '(UK)') && strstr($thisGame, '(En,'))
        {
            // Check for (UK) only version without extra languages
            $fCheck = trim(shell_exec("ls -1 \"{$niceName} (UK)\"* 2>/dev/null | grep -v '([A-Z][a-z],\|(\(Beta\|Beta \d+\|Debug\|Demo\|Demo \d+\|Developer Cart\|EDC\|Kiosk\|Preview\|Review Build\|Sample\|Unl\|Video Demo\))'"));
            if ($fCheck)
            {
                echo "\033[00;36mpure UK version (without extra languages) detected. Moved to Removed folder.\n";
                shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
                continue;
            }
        }

        // PURIFY - (Europe) > (Europe) (En, Fr) - AKA If current Europe game has extra languages,  check to see if there is a Europe version without extra languages (pure), while making sure we're not accidently scanning a Europe non-full retail release that hasn't been removed yet in this check.
        if (strstr($thisGame, '(Europe)') && strstr($thisGame, '(En,'))
        {
            // Check for (Europe) only version without extra languages
            $fCheck = trim(shell_exec("ls -1 \"{$niceName} (Europe)\"* 2>/dev/null | grep -v '([A-Z][a-z],\|(\(Beta\|Beta \d+\|Debug\|Demo\|Demo \d+\|Developer Cart\|EDC\|Kiosk\|Preview\|Review Build\|Sample\|Unl\|Video Demo\))'"));
            if ($fCheck)
            {
                echo "\033[00;36mpure Europe version (without extra languages) detected. Moved to Removed folder.\n";
                shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
                continue;
            }
        }

    }

    // Remove filenames in ManualRegionDupes.txt
    if (file_exists('manualregiondupes.txt'))
    {
        if (trim(file_get_contents('manualregiondupes.txt')) == true)
        {
            if (preg_match($manualRegionPattern, $thisGameNoExtension))
            {
                echo "\033[00;33mmatch found on the manual region dupes remove list. Moved to Removed folder.\n";
                shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
                continue;
            }
        }
    }

    // Remove filenames in ManualDemos.txt
    if (file_exists('manualdemos.txt'))
    {
        if (trim(file_get_contents('manualdemos.txt')) == true)
        {
            if (preg_match($manualDemosPattern, $thisGameNoExtension))
            {
                echo "\033[00;33mmatch found on the manual demos remove list. Moved to Removed folder.\n";
                shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
                continue;
            }
        }
    }

    // Remove filenames in ManualOthers.txt
    if (file_exists('manualothers.txt'))
    {
        if (trim(file_get_contents('manualothers.txt')) == true)
        {
            if (preg_match($manualOthersPattern, $thisGameNoExtension))
            {
                echo "\033[00;33mmatch found on the manual others remove list. Moved to Removed folder.\n";
                shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
                continue;
            }
        }
    }

    if (file_exists('test.csv'))
{
echo "FOUND CSVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV";
$csvFilename = "test.csv";
function find_user($csvFilename, $thisGameNoExtension) {
    $f = fopen($csvFilename, "r");
    $result = false;
    while ($row = fgetcsv($f)) {
        if ($row[1] == $thisGameNoExtension) {
            $result = $row[0];
            break;
        }
    }
    fclose($f);
   if $result;
    {
        echo "\033[00;33mmatch found on the EPIC manual others remove list. Moved to Removed folder.\n";
        shell_exec("mv " . escapeshellarg($thisGame) . " Removed/");
        continue;
    }
}
}

    echo "\033[01;32mscanned and kept.\n";

}
echo "\033[01;32m\n<<<<<<<<<<Process Complete>>>>>>>>>>\n\n";


?>